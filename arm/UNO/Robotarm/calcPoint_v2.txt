#include <iostream>
#include <math.h>

#define PI 3.14159265

struct Point {
	float xmm_;
	float ymm_;
	float zmm_;
	float emm_;
};

Point calcPoint(double x, double y, double v_ch)
{
double hyp = sqrt(pow(x,2)+pow(y,2));
double param = (y/hyp);
double v_old = 0;
if((x>0 && y>0) || (x>0 && y<0)) // 1. quadrant or 2. quadrant
{
  v_old = acos(param);
}

if((x<0 && y<0) || (x<0 && y>0)) // 3. quadrant or 4. quadrant
{
  v_old = -acos(param)+2.0*PI;

}
// Cases with x or y equals zero
if(x==0 && y>0)
{
  v_old = 0; //Radians
}
if(x==0 && y<0)
{
  v_old = PI; //Radians
}
if(x>0 && y==0)
{
  v_old = PI/2; //Radians
}
if(x<0 && y==0)
{
  v_old = 3.0*PI/2.0; //Radians
}

  double v_new = v_old + (((v_ch)/180.0))*PI;
  //std::cout<<"v_new: "<<v_new*180.0/PI<<std::endl;

  Point result;
  result.xmm_ = sin(v_new)*hyp;
  result.ymm_ = cos(v_new)*hyp;
  //std::cout<<"xmm_: "<<result.xmm_<<std::endl;
  //std::cout<<"ymm_: "<<result.ymm_<<std::endl;
  return result;
}

int main() {
  std::cout << "Hello World!\n";
  double x_old = -10.0;
  double y_old = 0.0;
  
  int v_change = -10; //One degree change
  Point p_new;

  for(int i=1;i<37;i++)
  {
      std::cout<<"Round: "<<i<<std::endl;
    p_new = calcPoint(x_old, y_old, v_change);
    x_old = p_new.xmm_;
    y_old = p_new.ymm_;
  }
}